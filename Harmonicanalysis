% Load data from Messdaten.mat
load('Messdaten.mat');

% Extract Elektrische Rotorfrequenz data
time_frq_el_intern = frq_el_intern(:, 2);
frq_el_intern_data = frq_el_intern(:, 1);

% Define the sampling frequency (inverse of the average time difference)
Fs = 1 / mean(diff(time_frq_el_intern));

% Define the number of harmonics to analyze
numHarmonics = 5;

% Initialize variables for harmonic analysis
harmonicFrequencies = zeros(numHarmonics, size(frq_el_intern_data, 2));
harmonicAmplitudes = zeros(numHarmonics, size(frq_el_intern_data, 2));
harmonicPhases = zeros(numHarmonics, size(frq_el_intern_data, 2));

% Iterate over each set of frequency data
for datasetIndex = 1:size(frq_el_intern_data, 2)
    % Perform FFT on the frequency data
    N = length(frq_el_intern_data(:, datasetIndex));
    Y = fft(frq_el_intern_data(:, datasetIndex), N);
    frequencies = (0:N-1) * Fs / N;

    % Find the peak amplitude and its corresponding frequency (fundamental frequency)
    [~, fundamentalFrequencyIndex] = max(abs(Y));
    fundamentalFrequency = frequencies(fundamentalFrequencyIndex);

    % Analyze the first 'numHarmonics' harmonics
    for harmonicIndex = 1:numHarmonics
        % Calculate the frequency, amplitude, and phase of the harmonic
        harmonicFrequencies(harmonicIndex, datasetIndex) = fundamentalFrequency * harmonicIndex;
        harmonicAmplitudes(harmonicIndex, datasetIndex) = abs(Y(fundamentalFrequencyIndex * harmonicIndex + 1));
        harmonicPhases(harmonicIndex, datasetIndex) = angle(Y(fundamentalFrequencyIndex * harmonicIndex + 1));
    end
end

% Display the results for each dataset
for datasetIndex = 1:size(frq_el_intern_data, 2)
    disp(['Results for Dataset ' num2str(datasetIndex) ':']);
    disp(['Fundamental Frequency: ' num2str(fundamentalFrequency) ' Hz']);
    disp('Harmonic Frequencies (Hz):');
    disp(harmonicFrequencies(:, datasetIndex));
    disp('Harmonic Amplitudes:');
    disp(harmonicAmplitudes(:, datasetIndex));
    disp('Harmonic Phases (radians):');
    disp(harmonicPhases(:, datasetIndex));
    disp('------------------------------------------------------');
end

% Plot the harmonic components for each dataset
figure;
for datasetIndex = 1:size(frq_el_intern_data, 2)
    subplot(size(frq_el_intern_data, 2), 2, 2 * datasetIndex - 1);
    stem(harmonicFrequencies(:, datasetIndex), harmonicAmplitudes(:, datasetIndex), 'Marker', 'o');
    title(['Harmonic Amplitudes - Dataset ' num2str(datasetIndex)]);
    xlabel('Frequency (Hz)');
    ylabel('Amplitude');

    subplot(size(frq_el_intern_data, 2), 2, 2 * datasetIndex);
    stem(harmonicFrequencies(:, datasetIndex), harmonicPhases(:, datasetIndex), 'Marker', 'o');
    title(['Harmonic Phases - Dataset ' num2str(datasetIndex)]);
    xlabel('Frequency (Hz)');
    ylabel('Phase (radians)');
end
