% Load data from Messdaten.mat
load('Messdaten.mat');

% Define the time range of interest
start_time = 86.566; % Start time in seconds
end_time = 86.616;   % End time in seconds

% Extract data within the specified time range
time_range_indices = find(frq_el_intern(:,2) >= start_time & frq_el_intern(:,2) <= end_time);
Frequenz = frq_el_intern(time_range_indices, 1);

% Perform FFT
Fs = 1 / (frq_el_intern(2, 2) - frq_el_intern(1, 2)); % Sampling frequency in Hz
N = length(Frequenz); % Length of the signal
Frequenz_fft = abs(fft(Frequenz)); % Compute FFT
Frequenz_fft = Frequenz_fft(1:N/2+1); % Consider only the positive frequencies
Frequenz_fft(2:end-1) = 2 * Frequenz_fft(2:end-1); % Take the magnitude and consider symmetry

% Define frequencies corresponding to FFT bins
frequencies = Fs * (0:(N/2)) / N; 

% Set the threshold for peak detection
threshold = 0.1 * max(Frequenz_fft); % Adjust the threshold as needed

% Identify peaks (harmonics) in the frequency domain
[peaks, peak_indices] = findpeaks(Frequenz_fft, 'MinPeakHeight', threshold);

% Plot original signal with respect to frequency
figure;
plot(frequencies, Frequenz_fft);
hold on;
plot(frequencies(peak_indices), peaks, 'r*');
xlabel('Frequency (Hz)');
ylabel('Amplitude');
title('FFT of Signal within Plateau Region with Identified Peaks (Harmonics)');
grid on;

% Save the plot as a PNG file
print('-dpng', 'Harmonic_Analysis_Plateau.png');
