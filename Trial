% Load data from Messdaten.mat
load('Messdaten.mat');

% Define the time range of interest
start_time = 86.566; % Start time in seconds
end_time = 86.616;   % End time in seconds

% Extract data within the specified time range
time_range_indices = find(frq_el_intern(:,2) >= start_time & frq_el_intern(:,2) <= end_time);
Frequenz = frq_el_intern(time_range_indices, 1);
Zeit = frq_el_intern(time_range_indices, 2);

% Measure the magnitude of the original signal
magnitude = abs(Frequenz);

% Calculate rotor speed from frequency data (assuming a factor of 60 to convert Hz to RPM)
rotor_speed = Frequenz * 60 / 4;  % Assuming 4 pulses per revolution

% Generate a noisy signal for demonstration purposes (replace this with your noisy signal data)
noisy_signal = randn(size(Frequenz));

% Plot original rotor signal
figure;
subplot(4, 1, 1);
plot(Zeit, rotor_speed);
xlabel('Time (s)');
ylabel('Rotor Speed (RPM)');
title('Rotor Speed');
grid on;

% Plot original rotor signal
subplot(4, 1, 2);
plot(Zeit, Frequenz);
xlabel('Time (s)');
ylabel('Frequency (Hz)');
title('Frequency');
grid on;

% Plot the magnitude of the original signal
subplot(4, 1, 3);
plot(Zeit, magnitude);
xlabel('Time (s)');
ylabel('Magnitude');
title('Magnitude of Original Signal');
grid on;

% Plot the noisy signal
subplot(4, 1, 4);
plot(Zeit, noisy_signal);
xlabel('Time (s)');
ylabel('Noisy Signal');
title('Noisy Signal');
grid on;

% Save the plot as a PNG file
print('-dpng', 'Signal_Analysis.png');
