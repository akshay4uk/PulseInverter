% Parameters
Fs = 10000;             % Sampling frequency (Hz)
T = 1/Fs;               % Sampling period (s)
L = 1000;               % Length of signal
t = (0:L-1)*T;          % Time vector
carrier_freq = 50;      % Carrier frequency (Hz)
mod_index = 0.8;        % Modulation index
overshoot_factor = 1.2; % Overshoot factor
linear_increase_slope = 0.01; % Slope for linear increase

% Generate carrier waveform
carrier = sin(2*pi*carrier_freq*t);

% Generate modulating waveforms for each phase
mod_phase_A = square(2*pi*carrier_freq*t, mod_index);
mod_phase_B = square(2*pi*carrier_freq*t - 2*pi/3, mod_index);
mod_phase_C = square(2*pi*carrier_freq*t + 2*pi/3, mod_index);

% Combine modulating waveforms with the carrier to create PWM signals
pwm_phase_A = carrier .* mod_phase_A;
pwm_phase_B = carrier .* mod_phase_B;
pwm_phase_C = carrier .* mod_phase_C;

% Convert PWM signals from AC to DC with overshoot and linear increase
dc_signal_A = overshoot_factor * pwm_phase_A + linear_increase_slope * t;
dc_signal_B = overshoot_factor * pwm_phase_B + linear_increase_slope * t;
dc_signal_C = overshoot_factor * pwm_phase_C + linear_increase_slope * t;

% Perform FFT on the DC signals
fft_dc_A = fft(dc_signal_A);
fft_dc_B = fft(dc_signal_B);
fft_dc_C = fft(dc_signal_C);

% Compute the frequency domain
N = length(dc_signal_A);
f = Fs*(0:(N/2))/N;

% Plot the single-sided amplitude spectrum for each DC signal
figure;
subplot(3,1,1);
plot(f, 2*abs(fft_dc_A(1:N/2+1)));
title('Single-Sided Amplitude Spectrum - Phase A');
xlabel('Frequency (Hz)');
ylabel('|Y(f)|');

subplot(3,1,2);
plot(f, 2*abs(fft_dc_B(1:N/2+1)));
title('Single-Sided Amplitude Spectrum - Phase B');
xlabel('Frequency (Hz)');
ylabel('|Y(f)|');

subplot(3,1,3);
plot(f, 2*abs(fft_dc_C(1:N/2+1)));
title('Single-Sided Amplitude Spectrum - Phase C');
xlabel('Frequency (Hz)');
ylabel('|Y(f)|');
