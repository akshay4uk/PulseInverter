% Load data from Messdaten.mat
load('Messdaten.mat');

% Define the time range of interest
start_time = 86.566; % Start time in seconds
end_time = 86.616;   % End time in seconds

% Extract data within the specified time range
time_range_indices = find(frq_el_intern(:,2) >= start_time & frq_el_intern(:,2) <= end_time);
Frequenz = frq_el_intern(time_range_indices, 1);
Zeit = frq_el_intern(time_range_indices, 2);

% Calculate RPM of the motor
RPM = (Frequenz * 60) / 4;

% Perform FFT
Fs = 1 / (Zeit(2) - Zeit(1)); % Sampling frequency in Hz
N = length(Frequenz); % Length of the signal
Frequenz_fft = fft(Frequenz); % Compute FFT

% Calculate the magnitude of the FFT signal (including both positive and negative frequencies)
Frequenz_fft_mag = abs(Frequenz_fft) / N; % Normalize by the number of samples

% Define frequencies corresponding to FFT bins
frequencies = Fs * (-N/2:N/2-1) / N;

% Set the fundamental frequency
fundamental_frequency = 66; % Hz

% Calculate harmonic frequencies
num_harmonics = 7; % Number of harmonics to analyze
harmonic_frequencies = fundamental_frequency * (0:num_harmonics); % Include mode 0

% Find indices corresponding to the harmonic frequencies
harmonic_indices = zeros(1, length(harmonic_frequencies));
for i = 1:length(harmonic_frequencies)
    [~, harmonic_indices(i)] = min(abs(frequencies - harmonic_frequencies(i)));
end

% Perform harmonic analysis
harmonic_magnitudes = Frequenz_fft_mag(harmonic_indices);

% Plot FFT
figure;
subplot(3, 1, 1);
plot(frequencies, Frequenz_fft_mag);
hold on;
stem(harmonic_frequencies, harmonic_magnitudes, 'r', 'Marker', 'none');
hold off;
xlabel('Frequency (Hz)');
ylabel('Magnitude');
title('Frequency Spectrum with Harmonic Peaks');
legend('FFT', 'Harmonics');
grid on;

% Plot spectral density
subplot(3, 1, 2);
[p, f] = periodogram(Frequenz, [], N, Fs, 'power');
plot(f, p);
xlabel('Frequency (Hz)');
ylabel('Power/Frequency (dB/Hz)');
title('Spectral Density');
grid on;

% Plot RPM of the motor
subplot(3, 1, 3);
plot(Zeit, RPM);
xlabel('Time (s)');
ylabel('RPM');
title('Motor RPM');
grid on;

% Save the plot as a PNG file
print('-dpng', 'Motor_Analysis.png');
