% Load data
load('Messdaten.mat');
load('Devabsolute.mat');

% Designing a low-pass Butterworth filter
order = 4; % Filter order
cutoff_frequency = 0.05; % Adjust the cutoff frequency as needed

[b_lowpass, a_lowpass] = butter(order, cutoff_frequency, 'low');

% Applying the low-pass filter to the signal using filtfilt
filtered_signal_lowpass = filtfilt(b_lowpass, a_lowpass, Dev_absolute_D);

% Plotting the original and filtered signals on the same graph
figure;

% Plot original signal
plot(n_mech_extern(:,2), Dev_absolute_D, '-b', 'LineWidth', 1.5, 'DisplayName', 'Original Signal');
hold on;

% Plot low-pass filtered signal
plot(n_mech_extern(:,2), filtered_signal_lowpass, '-g', 'LineWidth', 1.5, 'DisplayName', 'Low-Pass Filtered Signal');

% Add vertical lines indicating the cutoff frequency
line([0 400], [cutoff_frequency cutoff_frequency], 'Color', 'r', 'LineStyle', '--', 'DisplayName', 'Cutoff Frequency');

% Highlight the area below the original signal
fill_between_lines(n_mech_extern(:,2), Dev_absolute_D, 0, 'b', 0.1, 'Original Region');

hold off;

xlim([0 400]);
ylim([0 max(Dev_absolute_D) + 5]); % Adjust the y-axis limits as needed
title("Original and Low-Pass Filtered Signals");
xlabel("Time in s");
ylabel("Deviation");
legend('Location', 'northeast');
grid;

% Add annotations
text(150, cutoff_frequency + 1, sprintf('Cutoff Frequency: %.2f Hz', cutoff_frequency), 'Color', 'r');

% Function to fill the area below a line
function fill_between_lines(x, y, baseline, color, alpha, displayName)
    x_fill = [x; flipud(x)];
    y_fill = [y; baseline*ones(size(y))];
    fill(x_fill, y_fill, color, 'FaceAlpha', alpha, 'EdgeColor', 'none', 'DisplayName', displayName);
end
